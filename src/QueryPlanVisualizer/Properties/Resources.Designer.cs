//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExecutionPlanVisualizer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ExecutionPlanVisualizer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! jQuery v1.12.1 | (c) jQuery Foundation | jquery.org/license */
        ///!function(a,b){&quot;object&quot;==typeof module&amp;&amp;&quot;object&quot;==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(&quot;jQuery requires a window with a document&quot;);return b(a)}:b(a)}(&quot;undefined&quot;!=typeof window?window:this,function(a,b){var c=[],d=a.document,e=c.slice,f=c.concat,g=c.push,h=c.indexOf,i={},j=i.toString,k=i.hasOwnProperty,l={},m=&quot;1.12.1&quot;,n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery {
            get {
                return ResourceManager.GetString("jquery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap qp_icons {
            get {
                object obj = ResourceManager.GetObject("qp_icons", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (function webpackUniversalModuleDefinition(root, factory) {
        ///	if(typeof exports === &apos;object&apos; &amp;&amp; typeof module === &apos;object&apos;)
        ///		module.exports = factory();
        ///	else if(typeof define === &apos;function&apos; &amp;&amp; define.amd)
        ///		define([], factory);
        ///	else if(typeof exports === &apos;object&apos;)
        ///		exports[&quot;QP&quot;] = factory();
        ///	else
        ///		root[&quot;QP&quot;] = factory();
        ///})(this, function() {
        ///return /******/ (function(modules) { // webpackBootstrap
        ////******/ 	// The module cache
        ////******/ 	var installedModules = {};
        ///
        ////******/ 	// The require function
        ////** [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string qpJavascript {
            get {
                return ResourceManager.GetString("qpJavascript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to div.qp-node {
        ///    background-color: #FFFFCC;
        ///    margin: 2px;
        ///    padding: 2px;
        ///    border: 1px solid black;
        ///    font-size: 11px;
        ///    line-height: normal;
        ///}
        ///
        ///.qp-node&gt;div {
        ///    font-family: Monospace;
        ///    text-align: center;
        ///}
        ///
        ///div[class|=&apos;qp-icon&apos;] {
        ///    height: 32px;
        ///    width: 32px;
        ///    margin-left: auto;
        ///    margin-right: auto;
        ///    background-repeat: no-repeat;
        ///}
        ///
        ///.qp-tt {
        ///    top: 4em;
        ///    left: 2em;
        ///    border: 1px solid black;
        ///    background-color: #FFFFEE;
        ///    padding: 2px [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string qpStyleSheet {
            get {
                return ResourceManager.GetString("qpStyleSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///  xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot;
        ///  xmlns:exslt=&quot;http://exslt.org/common&quot;
        ///  xmlns:s=&quot;http://schemas.microsoft.com/sqlserver/2004/07/showplan&quot;
        ///  exclude-result-prefixes=&quot;msxsl s xsl&quot;&gt;
        ///  &lt;xsl:output method=&quot;html&quot; indent=&quot;no&quot; omit-xml-declaration=&quot;yes&quot; /&gt;
        ///
        ///  &lt;!-- Disable built-in recursive processing templates --&gt;
        ///  &lt;xsl:template match=&quot;*|/|text()|@*&quot; mode=&quot;NodeLabel2&quot; /&gt;
        ///  &lt;xsl:te [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string qpXslt {
            get {
                return ResourceManager.GetString("qpXslt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsd:schema targetNamespace=&quot;http://schemas.microsoft.com/sqlserver/2004/07/showplan&quot; xmlns:shp=&quot;http://schemas.microsoft.com/sqlserver/2004/07/showplan&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; elementFormDefault=&quot;qualified&quot; attributeFormDefault=&quot;unqualified&quot; version=&quot;1.3&quot; blockDefault=&quot;#all&quot;&gt;
        ///  &lt;xsd:annotation&gt;
        ///    &lt;xsd:documentation&gt;
        ///      The following schema for Microsoft SQL Server describes output from the
        ///      showplan functionality in XML format.
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string showplanxml {
            get {
                return ResourceManager.GetString("showplanxml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot; /&gt;
        ///    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;
        ///    &lt;link type=&quot;text/css&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; href=&quot;{0}&quot; /&gt;
        ///    &lt;script type=&quot;text/javascript&quot; src=&quot;{1}&quot;&gt;&lt;/script&gt;
        ///    &lt;script src=&quot;{2}&quot;&gt;&lt;/script&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    {3}
        ///    &lt;script type=&quot;text/javascript&quot;&gt;
        ///        $(document).ready(function() {{
        ///                QP.drawLines($(&quot;.qp-root&quot;));
        ///            }});
        ///    &lt;/script&gt;
        ///&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string template {
            get {
                return ResourceManager.GetString("template", resourceCulture);
            }
        }
    }
}
